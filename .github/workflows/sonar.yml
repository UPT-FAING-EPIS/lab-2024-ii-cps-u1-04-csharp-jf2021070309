name: Sonar Continuous Integration
env:
  DOTNET_VERSION: '8.0' # La versión de  .NET
  SONAR_ORG: 'jaimeflores' # Nombre de la organización de SonarCloud
  SONAR_PROJECT: 'jaimeflores_apibank' # Key ID del proyecto de SonarCloud
on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  sonarqube:
    name: Sonarqube Analisys
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Configurando la versión de NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
      - name: Restaurar los paquetes
        run: dotnet restore 
      - name: Ejecutar pruebas
        run: dotnet test --collect:"XPlat Code Coverage;Format=opencover"
      - name: Instalar Scanner
        run: dotnet tool install -g dotnet-sonarscanner
      - name: Ejecutar escaneo
        run: |
             dotnet-sonarscanner begin /k:"jaimeflores_apibank" /o:"jaimeflores" /d:sonar.login="2df948560099b588180f429d99e930ecd0077314" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.opencover.reportsPaths="//*/coverage.opencover.xml" /d:sonar.qualitygate.wait=true
             dotnet build
             dotnet-sonarscanner end /d:sonar.login="2df948560099b588180f429d99e930ecd0077314"

